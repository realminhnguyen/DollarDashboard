06-12-24
- created flask-server dir with server.py file for backend
- ran npx create-react-app client to create a react app dir named client
- created virtual env while in flask-server dir
- installed flask 
Setting up backend API:
- imported flask into server.py, initialized a flask application instance 
- created simple API route to return a list of members
Working on frontend:
- remove some unnecessary files
- in package.json, wrote "proxy": "http://localhost:5000", to tell react which port our backend is running on so that we can make relative requests
- in App.js, created react functional component and export
- 'useState' will contain the data retrieved from the back end. will also render the data on the page
- 'useEffect' will be used to fetch the backend api on the first render
